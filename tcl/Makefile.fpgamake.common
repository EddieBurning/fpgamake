
V=0
ifeq ($(V),0)
  Q=@
else
  Q=
endif
SYNTH_NETLISTS=
ifneq ("$(FLOORPLAN)","")
SYNTH_NETLISTS +=Impl/top/top-post-route.dcp
endif

define SYNTH_RULE
SYNTH_NETLISTS += Synth/$1/$1-synth.dcp
Synth/$1/$1-synth.dcp: $($1_PATH)
	$(Q)$(eval MODULE=$1)
	@echo fpgamake.mk Synth/$1/$1-synth.dcp
	$(Q)mkdir -p Synth/$(MODULE)
	$(Q)MODULE=$(MODULE) \
	    HEADERFILES="$($(MODULE)_HEADERFILES)" \
	    VFILES="$($(MODULE)_VFILES) $(foreach item,$($(MODULE)_STUBS), Synth/stubs/$(item))" \
	    VHDFILES="$($(MODULE)_VHDFILES)" \
	    VHDL_LIBRARIES="$($(MODULE)_VHDL_LIBRARIES)" \
	    IP="$($(MODULE)_IP)" \
	    SUBINST="$($(MODULE)_SUBINST)" \
	    USER_TCL_SCRIPT="$($(MODULE)_USER_TCL_SCRIPT)" \
            FPGAMAKE_PARTNAME=$(FPGAMAKE_PARTNAME) \
            FPGAMAKE_BOARDNAME=$(FPGAMAKE_BOARDNAME) \
            FPGAMAKE_TOPMODULE=$(FPGAMAKE_TOPMODULE) \
	    PRESERVE_CLOCK_GATES=$(PRESERVE_CLOCK_GATES) \
	    VERILOG_DEFINES=$(VERILOG_DEFINES) \
	    XDC="$($(MODULE)_XDC)" \
	    BUILDCACHE_CACHEDIR="$(CACHEDIR)/Synth/$(MODULE)" \
	    BUILDCACHE_OUTPUTDIR="Synth/$(MODULE)" \
	    $(BUILDCACHE) vivado -notrace -mode batch -source $(TCLDIR)/synth.tcl
endef

define IMPL_RULE
Impl/$1/$1-post-route.dcp: Synth/$2/$2-synth.dcp $($(1)_NETLISTS) Impl/oocxdc.timestamp $(foreach item,$($(INST)_OOCXDC), Impl/$(INST)/$(item))
	$(Q)$(eval MODULE=$2)
	$(Q)$(eval INST=$1)
	@echo fpgamake.mk Impl/$1/$1-post-route.dcp
	$(Q)MODULE=$(MODULE) INST=$(INST) \
	    XDC="$($(INST)_XDC) $(foreach item,$($(INST)_OOCXDC), Impl/$(INST)/$(item))" \
	    MODULE_NETLISTS="$($(INST)_NETLISTS)" \
	    BITFILE=$($(INST)_BITFILE) \
            BUILDCACHE_CACHEDIR="$(CACHEDIR)/Impl/$(INST)" \
            BUILDCACHE_OUTPUTDIR="Synth/$(INST)" \
	    $(BUILDCACHE) vivado -notrace -mode batch -source $(TCLDIR)/impl.tcl
endef

define TOP_RULE
SYNTH_NETLISTS += Impl/TopDown/$1-post-place.dcp
Impl/TopDown/$1-post-place.dcp: $(FLOORPLAN) $(TopDown_NETLISTS) Synth/$2/$2-synth.dcp
	$(Q)$(eval MODULE=$2)
	$(Q)$(eval INST=$1)
	@echo fpgamake.mk Impl/TopDown/$1-post-place.dcp
	$(Q)mkdir -p Impl/TopDown/
	$(Q) MODULE=$(MODULE) INST=$(INST) \
	     SUBINST="$(TopDown_SUBINST)" \
	     MODULE_NETLISTS="$(TopDown_NETLISTS)" \
	     XDC="$(TopDown_XDC)" \
	     FLOORPLAN="$(FLOORPLAN)" \
	     BITFILE=Impl/TopDown/mkTop.bit \
	     BUILDCACHE_CACHEDIR="$(CACHEDIR)/Impl/TopDown" \
	     BUILDCACHE_OUTPUTDIR="Impl/TopDown" \
	     REPORT_NWORST_TIMING_PATHS="$(REPORT_NWORST_TIMING_PATHS)" \
	     $(BUILDCACHE) vivado -notrace -mode batch -source $(TCLDIR)/topdown.tcl

$3: Impl/TopDown/$1-post-place.dcp
	$(Q)cp -v Impl/TopDown/mkTop.bit $4.bit
	$(Q)cp -v Impl/TopDown/mkTop.bin $4.bin

Impl/oocxdc.timestamp: Impl/TopDown/$1-post-place.dcp
	@echo fpgamake.mk Impl/oocxdc.timestamp
	INST=$1 MODULE=$2 \
	SUBINST="$(TopDown_SUBINST)" \
	$(BUILDCACHE) vivado -notrace -mode batch -source $(TCLDIR)/write-ooc-xdc.tcl
	touch Impl/oocxdc.timestamp

$(foreach inst, $(TopDown_SUBINST), Impl/$(inst)/$(inst)-ooc.xdc Impl/$(inst)/$(inst)-ooc-budget.xdc Impl/$(inst)/$(inst)-ooc-clocks.xdc): Impl/oocxdc.timestamp

endef

##
## Altera Makefile
##
define MAP_RULE
SYNTH_NETLISTS += Synth/$1/$1-map.dcp
Synth/$1/$1-map.dcp: $($1_PATH)
	$(Q)$(eval MODULE=$1)
	@echo fpgamake.mk Synth/$1/$1-map.dcp
	$(Q)mkdir -p Synth/$(MODULE)
	$(Q)MODULE=$(MODULE) \
	    HEADERFILES="$($(MODULE)_HEADERFILES)" \
	    VFILES="$($(MODULE)_VFILES) $(foreach item,$($(MODULE)_STUBS), Synth/stubs/$(item))" \
	    VHDFILES="$($(MODULE)_VHDFILES)" \
	    VHDL_LIBRARIES="$($(MODULE)_VHDL_LIBRARIES)" \
	    IP="$($(MODULE)_IP)" \
	    STP="$($(MODULE)_STP)" \
	    SUBINST="$($(MODULE)_SUBINST)" \
	    USER_TCL_SCRIPT="$($(MODULE)_USER_TCL_SCRIPT)" \
            FPGAMAKE_PARTNAME=$(FPGAMAKE_PARTNAME) \
            FPGAMAKE_BOARDNAME=$(FPGAMAKE_BOARDNAME) \
            FPGAMAKE_TOPMODULE=$(FPGAMAKE_TOPMODULE) \
            FPGAMAKE_FAMILY=$(FPGAMAKE_FAMILY) \
	    VERILOG_DEFINES=$(VERILOG_DEFINES) \
	    BUILDCACHE_CACHEDIR="$(CACHEDIR)/Synth/$(MODULE)" \
	    BUILDCACHE_OUTPUTDIR="Synth/$(MODULE)" \
	    $(BUILDCACHE) quartus_sh -t $(TCLDIR)/altera_map.tcl
endef

# altera fit
define FIT_RULE
SYNTH_NETLISTS += Impl/Fit/$1-fit.dcp
Impl/Fit/$1-fit.dcp: $(FLOORPLAN) $(Fit_NETLISTS) Synth/$2/$2-map.dcp
	$(Q)$(eval MODULE=$2)
	$(Q)$(eval INST=$1)
	@echo fpgamake.mk Impl/Fit/$1-fit.dcp
	$(Q)mkdir -p Impl/Fit/
	$(Q) MODULE=$(MODULE) INST=$(INST) \
	     SUBINST="$(Fit_SUBINST)" \
	     MODULE_NETLISTS="$(Fit_NETLISTS)" \
	     SDC="$(top_SDC)" \
	     FLOORPLAN="$(FLOORPLAN)" \
	     BITFILE=Impl/Fit/$(MODULE).sof \
	     BUILDCACHE_CACHEDIR="$(CACHEDIR)/Impl/Fit" \
	     BUILDCACHE_OUTPUTDIR="Impl/Fit" \
	     REPORT_NWORST_TIMING_PATHS="$(REPORT_NWORST_TIMING_PATHS)" \
	     $(BUILDCACHE) quartus_sh -t $(TCLDIR)/altera_fit.tcl

$3: Impl/Fit/$1-fit.dcp
	$(Q)echo "copy bitfile if needed"

endef

all: everything
